{"version":3,"sources":["App.js","index.js"],"names":["App","useState","noteTitle","setNoteTitle","note","setNote","notes","setNotes","isBeingEdited","setIsBeingEdited","contentEdited","setContentEdited","searchResults","setSearchResults","editNote","id","editedNotes","map","text","deleteNote","filter","searchNotes","inputText","results","includes","className","action","onSubmit","type","placeholder","onChange","e","target","value","preventDefault","newNote","title","Date","getTime","concat","onClick","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1453a08a.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n//import { MdSearch } from 'react-icons/md';\n//import { MdDeleteForever } from 'react-icons/md';\n\nconst App = () => {\n\n  const [noteTitle, setNoteTitle] = useState('');\n  const [note, setNote] = useState('');\n  const [notes, setNotes] = useState([]);\n  const [isBeingEdited, setIsBeingEdited] = useState(null);\n  const [contentEdited, setContentEdited] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  function createNote(e){\n    e.preventDefault();\n    let newNote = {\n      title:noteTitle,\n      text:note,\n      id: new Date().getTime()\n    };\n    setNotes([...notes].concat(newNote));\n    // ponder the necessity of these two lines\n    setNote('');\n    setNoteTitle('');\n  }\n\n  function editNote(id){\n    let editedNotes = [...notes].map((notes) => {\n      if (note.id === id){\n          note.text = contentEdited;\n      };\n      // ponder the necessity of the return\n      return note;\n    });\n    setNotes(editedNotes);\n    setContentEdited('');\n    setIsBeingEdited(null);\n  }\n\n  function deleteNote(id){\n    let editedNotes = [...notes].filter((note) => (note.id !== id));\n    setNotes(editedNotes);\n  }\n\n  const searchNotes = (inputText) => {\n    let results = [...notes].filter((note) => note.text.includes(inputText));\n    setSearchResults(results)\n  }\n\n  function closeSearchResults(){\n    //logic to close a modal\n    setSearchResults([])\n  }\n\n  return (\n  <div className=\"App\">\n\n{/********************* The Search Bar ********************/}\n      <form action=\"\" onSubmit={searchNotes}>\n        <input type=\"text\"\n               placeholder='search'\n               onChange={(e) => searchNotes(e.target.value)}/>\n        <button>Search</button>\n      </form>\n\n{/********************* Creates a Note ********************/}\n      <form action=\"\" onSubmit={createNote}>\n        <input type=\"text\"\n              placeholder='title'\n              onChange={(e) => setNoteTitle(e.target.value)}\n              value={noteTitle}/>\n        <input type=\"text\"\n               placeholder='note'\n               onChange={(e) => setNote(e.target.value)}\n               value={note}/>\n        <button>New Note</button>\n      </form>\n\n{/*************************** Displayed Notes **************************/}\n    <div className='notesWrapper'>\n\n      { notes.map((note) =>\n\n          <div className='note'>\n            <h1 className='noteTitle'>{note.title}</h1>\n            { note.id !== isBeingEdited ?  ( <p>{note.text}</p> ) :\n            ( <div>\n              <input type=\"text\"\n                  onChange={(e) => setNote(e.target.value)}\n                  value={contentEdited}/>\n                  <button onClick={editNote(note.id)}>Submit</button>\n              </div> )  }\n\n              <button onClick={setIsBeingEdited(note.id)}>Edit</button>\n              <button onClick={deleteNote(note.id)}>Delete</button>\n          </div>\n\n      )}\n\n    </div>\n\n{/*********************** Search Results Modal *************************/}\n    <div className='search'>\n      <div className='search-icons' size='1.3em'>\n      { searchResults.map((note) =>\n\n        <div className='note'>\n          <h1 className='noteTitle'>{note.title}</h1>\n          { note.id !== isBeingEdited ?  ( <p>{note.text}</p> ) :\n          ( <div>\n            <input type=\"text\"\n                onChange={(e) => setNote(e.target.value)}\n                value={contentEdited}/>\n                <button onClick={editNote(note.id)}>Submit</button>\n            </div> )  };\n\n            <button onClick={setIsBeingEdited(note.id)}>Edit</button>\n            <button onClick={deleteNote(note.id)}>Delete</button>\n        </div>\n\n      )}\n\n        <button onClick={closeSearchResults}>Close</button>\n      </div>\n    </div>\n{/**********************************************************************/}\n  </div>\n)};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}